package kr.or.ddit.member.controller;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.validation.Errors;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import kr.or.ddit.enumpkg.ServiceResult;
import kr.or.ddit.member.service.MemberService;
import kr.or.ddit.member.vo.MemberVO;

@Controller
@RequestMapping("/member")
public class MemberController {
	
	@Inject
	private MemberService service;
	
	@ModelAttribute("member")
	public MemberVO member() {
		return new MemberVO();
	}
	
	@GetMapping("/join")
	public String joinMember() {
		return "member/join";
	}
	
	@GetMapping("/registerEmail")
	public String emailConfirm(MemberVO member)throws Exception{

	    service.updateMailAuth(member);

	    return "member/emailAuthSuccess";
	}
	
	@GetMapping("/mypageList")
	public String mypageList() {
		return "pms/mypage/mypageList";
	}
	
	@GetMapping("/mypageDetail")
	public String mypageDetail() {
		return "pms/mypage/mypageDetail";
	}
	
	@PostMapping("/memberInsert")
	public String memberInsert(
			HttpServletRequest req 
			, @ModelAttribute("member") MemberVO member
			, Errors errors) throws Exception{
		
		boolean valid = true;
		
		String viewName = null;
		
		if(valid) {
			ServiceResult result = service.createMember(member);
			switch (result) {
			case PKDUPLICATED:
				req.setAttribute("message", "아이디 중복");
				viewName = "member/join";
				break;
			case FAIL:
				req.setAttribute("message", "서버에 문제 있음. 쫌따 다시 하셈.");
				viewName = "member/join";
				break;

			default:
				viewName = "redirect:/";
				break;
			}
		}else {
			viewName = "member/join";
		}
		return viewName;
	}
	
}

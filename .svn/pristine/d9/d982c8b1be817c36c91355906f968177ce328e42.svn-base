package kr.or.ddit.project.management.controller;

import java.util.List;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.enumpkg.ServiceResult;
import kr.or.ddit.project.home.service.ProjectService;
import kr.or.ddit.project.home.vo.ParticipateVO;
import kr.or.ddit.project.home.vo.ProjectVO;
import kr.or.ddit.project.management.service.ManagementService;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/project")
public class ManagementController {
	
	@Inject
	private ProjectService service;
	@Inject
	private ManagementService managementService;
	
	@GetMapping("/project/management/{proCode}")
	public String projectManagement(
			@PathVariable String proCode
			, Model model
			) {
		ProjectVO project = service.retrieveProject(proCode);
		model.addAttribute("project", project);
		return "project/management/management";
	}
	
	// 프로젝트 관리 
	@GetMapping(value="/project/management/projectSetting/{proCode}", produces="application/json;charset=utf-8")
	@ResponseBody
	public ProjectVO projectSettingDetail(
			@PathVariable String proCode
			, Model model
			) {
		log.info("proCode : {}",proCode);
		ProjectVO project = service.retrieveProject(proCode);
		model.addAttribute("project",project);
		log.info("project : {}",project);
		return project;
	}
	
	// 멤버 관리
	@GetMapping(value="/project/management/memberManagementList/{proCode}", produces="application/json;charset=utf-8")
	@ResponseBody
	public List<ParticipateVO> memberManagementList(
			@PathVariable String proCode
			){
		List<ParticipateVO> list = managementService.retrieveParticipateList(proCode);
		log.info("ParticipateList : {}",list);
		return list;
	}
	
	@PostMapping("/participateInsert")
	@ResponseBody
	public String participateInsert(
			@ModelAttribute("participate") ParticipateVO participate
			) {
		String resultStr = "0";
		ServiceResult result = managementService.createParticipate(participate);
		
		switch(result) {
		case OK:
			log.info("OK");
			resultStr = "1";
			break;
		case FAIL:
			log.info("FAIL");
			resultStr = "0";
			break;
		}
		
		return resultStr;
	}

}

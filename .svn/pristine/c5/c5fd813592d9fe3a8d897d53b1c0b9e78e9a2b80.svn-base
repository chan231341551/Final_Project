<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>

<main class="content">
	<div class="container-fluid p-0">



		<a class="btn btn-primary float-end mt-n1 isCreate">
		<button type="button" class="btn" data-bs-toggle="modal" data-bs-target="#centeredModalPrimary" style="padding: 0px; color: currentcolor;">
			New issue
		</button>
		</a>

		<a class="btn btn-primary float-end mt-n1 isCreate">
		<button type="button" class="btn" data-bs-toggle="modal" data-bs-target="#issueModal" style="padding: 0px; color: currentcolor;">
		  New issue
		</button>
		</a>
		
		
		
		<div class="mb-3">
			<h1 class="h3 d-inline align-middle">ISSUE</h1>
		</div>



		<div class="row">
		</div>
		
		<!-- BEGIN primary modal -->
			<div class="modal fade" id="centeredModalPrimary" tabindex="-1" role="dialog" aria-hidden="true">
				<div class="modal-dialog modal-dialog-centered modal-lg isCont" role="document">						
				</div>	
			</div>
		<!-- END primary modal -->
	
		<!-- Modal -->
		<div class="modal fade" id="issueModal" tabindex="-1" aria-labelledby="issueModal" aria-hidden="true">
		      <div class="modal-dialog modal-dialog-centered modal-lg isCont" role="document">
	     	 </div>
		</div>
		
	</div>
	

	
	
	
</main>
<script>
	
	// ui 생성 함수
	let ListTag = function(i,v){
// 		console.log("v : ",v);
		return $("<div>").attr('class', 'col-12 col-md-6 col-lg-3')
				.append($("<div>").attr('class', 'card')
				.append($("<button>").attr({
										  'type' : 'button'
										, 'class' : 'btn'
										, 'data-bs-toggle' : 'modal'
										, 'data-bs-target' : '#centeredModalPrimary'
				}).css('text-align', 'start')
				.append($("<div>").attr('class', 'card-header px-4 pt-4')
					.append(
						  $("<div>").attr('class', 'card-actions float-end').html(v.issStatusCd)
						, $("<h5>").attr('class', 'card-title mb-0').html(v.issTitle)
						, LabelTag(v.issLabelCd)
						, EmerCdTag(v.issEmerCd)
						  )
					, $("<div>").attr('class', 'card-body px-4 pt-2')
						.append(
							  $("<p>").html(v.issCont)
							, $("<h5>").attr('class', 'rounded-circle me-1').html(v.memName))
					, $("<ul>").attr('class', 'list-group list-group-flush')
						.append($("<li>").attr('class', 'list-group-item px-4 pb-4')
							.append(
									$("<p>").attr('class', 'mb-2 font-weight-bold').html("마감 기한")
										.append($("<span>").attr('class', 'float-end').html(Progress(v.issSdate, v.issEedate)))
										, $("<div>").attr('class', 'progress progress-sm')
											.append($("<div>").attr({
																	'class':'progress-bar'
																	, 'role':'progressbar'
																	, 'aria-valuenow':'100'
																	, 'aria-valuemin':'0'								
																	, 'aria-valuemax':'100'
																	})
																	.css('width', Progress(v.issSdate, v.issEedate))
																	)
							)
						)
					)
				)
			)
		}
	
	// 날짜 퍼센트 계산
	let Progress = function(start, end){
// 		console.log("start : ", start);
// 		console.log("end : ", end);

		/* 년 / 월 / 일을 쪼갬 */
		var start_date = start.substring(0, 4)+start.substring(5, 7)+start.substring(8, 10);
		var end_date = end.substring(0, 4)+end.substring(5, 7)+end.substring(8, 10);
		
		var date = new Date();
		var today = date.getFullYear() +
		'' + ( (date.getMonth()+1) < 9 ? "0" + (date.getMonth()+1) : (date.getMonth()+1) )+
		'' + ( (date.getDate()) < 9 ? "0" + (date.getDate()) : (date.getDate()) );
		
// 		console.log("start_date : ", start_date);
// 		console.log("end_date : ", end_date);
// 		console.log("today : ", today);

		var total = end_date-start_date;
		var day = end_date-today;

		var perc ="";
		if(total<0 || start_date>today){
			perc = 0;
		}else if(day>0){
			perc = 1 - day/total;			
		}else if(day<=0 || today>end_date){
			perc = 100;
		}
		var result = Math.floor(perc*100);
		console.log("result : ", result);
		
		return result+"%";
	}
	
	// 긴급도 생성
	let EmerCdTag = function(code){
// 		console.log("code : ",code);
		if(code == "b003"){
			return $('<div>').attr({'class':'btn btn-github', 'style':'margin-left: 5px'}).html('긴급');
		}else{
			return "&nbsp;";
		}
	}
	
	// 라벨 색 지정
	let LabelTag = function(label){
// 		console.log("label : ",label);
		let color="";
		
		if(label == "Question"){
			color = "btn btn-success";
		}else if(label == "Bug"){
			color = "btn btn-danger";
		}else if(label == "Help"){
			color = "btn btn-warning";
		}else {
			color = "btn btn-primary";
		}
		return $("<div>").attr('class', color).html(label);
	}
	
	
	$(document).ready(function(){
		 $.ajax({
             url: '${pageContext.request.contextPath}/project/project/issue',
             method: 'GET',
             dataType : 'json',
             success: function (resp) {
// 				 console.log("resp.issueList : ", resp.issueList);
				 
				 // ui 생성 함수 호출
				 let selectTag = [];
				 $.each(resp.issueList,function(i,v){
				 	selectTag.push(ListTag(i,v));
				 });
				 $(".row").html(selectTag);
             },
				error : function(jqXHR, status, error) {
					console.log(jqXHR);
					console.log(status);
					console.log(error);
             }
         })
	});
	
	
	$(".isCreate").on("click",function(){
		$.ajax({
			url : '${pageContext.request.contextPath}/project/issueForm',
			type : 'GET',
			success : function(resp) {
// 				console.log(resp);
				$('.isCont').html(resp);
			},
			error : function(xhr, error, msg) {
				console.log(xhr, error, msg);
			},
			dataType : 'html'
		}) 
	});
	
	
	
	
</script>